<?php

// Lesson 3
/*
 * С помощью цикла while выведите все числа в промежутке от 0 до 100, которые делятся на 3 без остатка.
 */

$i = 0;
while ($i <= 100) {
    $res = $i % 3;
    if($res == 0){
        echo $i;
        echo '<br>';
    }
    $i++;
}

/*
 * С помощью цикла do...while напишите функцию для вывода чисел от 0 до 10, чтобы результат выглядел так:
 * 0 – это ноль
 * 1 – нечетное число
 * 2 – четное число
 * 3 – нечетное число ...
 * 10 – четное число
 *
 * */

$i = 0;
do {
    if ($i == 0){
        echo $i . " - это ноль. <br>";
    }
    else if($i <= 10){
        $res = $i % 2;
        if ($res == 0){
            echo $i . " - это четное число. <br>";
        }
        else{
            echo $i . " - это не четное число. <br>";
        }
    }
    $i++;
} while($i <= 10);

/*
 * Задание со звездочкой. Выведите с помощью цикла for числа от 0 до 9, НЕ используя тело цикла. То есть выглядеть должно вот так:
 * for(...){// здесь пусто}
 * */
echo '<br>';
for ($i = 0; $i < 10; print($i++)) {

}
/*
 * Объявите массив, где в качестве ключей будут использоваться названия областей,
 * а в качестве значений – массивы с названиями городов из соответствующей области. Выведите в цикле значения массива, чтобы результат был таким:
 * Московская область:
 * Москва, Зеленоград, Клин Ленинградская область:
 * Санкт-Петербург, Всеволожск, Павловск, Кронштадт Рязанская область
 * ...
 * (названия городов можно найти на maps.yandex.ru)
 *
*/


echo '<br>';
echo '<br>';


$arr = [
    'Московская область' => ['Москва', 'Подольск', 'Коломна', 'Балашиха', 'Дмитров'],
    'Пензенская область' => ['Пенза', 'Кузнецк', 'Заречный', 'Каменка', 'Никольск'],
    'Ленинградская область' => ['Выборг', 'Гатчина', 'Приозерск', 'Луга', 'Всеволожск']
];


foreach ($arr as $region => $cities) {

    echo $region . ":<br>";

    $count = 0;

    foreach ($cities as $cityIndex => $city){

        $count ++;

        if ($count != count($cities)){

            echo $city.', ';
        }

        else {

            echo $city;
        }
    }

    echo '<br>';
}

/*
 * Задание со звездочкой. Повторите предыдущее задание, но выводите на экран только города, начинающиеся с буквы «К».
 *
 * !!! Вопрос - как лучше определить что мы выводим последний город, который начинается с К чтобы не ставить ему запятую в конце? 
 * */

echo '<br>';
echo '<br>';

foreach ($arr as $region => $cities) {

    echo $region . ":<br>";

    foreach ($cities as $cityIndex => $city){

        if (mb_substr($city, 0, 1, "UTF-8") == "К" || mb_substr($city, 0, 1, "UTF-8") == "к"){

          echo $city.", ";

        }
    }

    echo '<br>';
}

/*
 * Объявите массив, индексами которого являются буквы русского языка, а значениями
 *  – соответствующие латинские буквосочетания
 *  (‘а’=> ’a’, ‘б’ => ‘b’, ‘в’ => ‘v’, ‘г’ => ‘g’, ..., ‘э’ => ‘e’, ‘ю’ => ‘yu’, ‘я’ => ‘ya’).
 * Напишите функцию транслитерации строк.
 * */


/*
function chti($string, $ch1, $ch2, $ch3){  // ch1 - для слова "один" значение склонения, ch2 - для слова "три" склонение, ch3 - для слова "пять" склонение
    $ff=Array('0','1','2','3','4','5','6','7','8','9');

    if(substr($string,-2, 1)==1 && strlen($string)>1) // если в переданной строке предпоследний символ == 1 и строка больше одного символа, то
    {
        $ry=array("0 $ch3","1 $ch3","2 $ch3","3 $ch3" ,"4 $ch3","5 $ch3","6 $ch3","7 $ch3","8 $ch3","9 $ch3"); // заносим в массив строки, соответствующие каждой цифре от 0 до 9
    }
    else {
        $ry=array("0 $ch3","1 $ch1","2 $ch2","3 $ch2","4 $ch2","5 $ch3"," 6 $ch3","7 $ch3","8 $ch3"," 9 $ch3"); // иначе заносим значения для всех остальных случаев
    }
    $string1 = substr($string,0,-1).str_replace($ff, $ry, substr($string,-1,1)); // в переменную стринг1 заносим исходную строку, но отбрасываем последний символ, затем делаем замену ff на ry в последнем символе строки
    return $string1; // возвращаем результат

    /*
     * Таким образом, если мы передаем например (1, "час", "часа", "часов"), то функция
     * сначала создает строковый массив ff со значениями от 0 до 9,
     * затем проверяет равен ли предпоследний символ 1, в нашем случае такого символа вообще нет, значит условие пропускается и переходит к блоку else
     * в блоке else массиву $ry присвоятся значения "0 часов", "1 час", "2 часа" и т.д.
     * затем создастся строка string1 в которую запишется значение $rest = substr("abcdef", 0, -1);
     * // возвращает "abcde" - т.е. отбросится последний символ, в нашем случае придет пустая строка, т.к. в исходной строке была "1"
     * затем, выражением .str_replace($ff, $ry, substr($string,-1,1)); мы ищем - совпадает ли значение из массива ff с последним символом строки и, если это так, то заменяем его
     * на соответствующее по индексу значение в массиве $ry. Т.е. в нашем случае у нас последний символ - это "1", значит мы будем искать такое значение в массиве ff - такое значение в нем есть
     * - это индекс с номером 1. Значит мы берем значение в массиве ry c индексом 1 ("1 час") и ставим его вместо "1". Таким образом, в результате получается
     * "1 час".
     *
}*/

echo '<br>';
echo '<br>';

function getLatinStr($string){

    $arr = [
        'а' => 'a',
        'б' => 'b',
        'в' => 'v',
        'г' => 'g',
        'д' => 'd',
        'е' => 'e',
        'ж' => 'j',
        'з' => 'z',
        'и' => 'i',
        'й' => 'yi',
        'к' => 'k',
        'л' => 'l',
        'м' => 'm',
        'н' => 'n',
        'ё' => 'yo',
        'о' => 'o',
        'п' => 'p',
        'р' => 'r',
        'с' => 's',
        'т' => 't',
        'у' => 'u',
        'ф' => 'f',
        'ц' => 'ts',
        'ч' => 'ch',
        'ш' => 'sh',
        'щ' => 'sh',
        'ъ' => '',
        'ы' => 'ia',
        'ь' => '',
        'э' => 'e',
        'ю' => 'yu',
        'я' => 'ya',
        'х' => 'h'
    ];

    foreach ($arr as  $source => $change){

        $string = str_replace($source, $change, $string);

    }
    return $string;
}
echo getLatinStr("шла саша по шоссе и сосала сушку");